apply plugin: 'jacoco'

ext {
    MERGED_FILE = "$rootDir/mergedcoverage.ec"
    COVERAGE_DATA_FILES = "$rootDir/coverage"
}

jacoco {
    toolVersion = "0.7.4.201502262128" //指定jacoco的版本，该设置没有用
    reportsDir = file("$rootDir/JacocoReport") //指定jacoco生成报告的文件夹
}

android {
    buildTypes {
        debug {
            //打开覆盖率统计开关
            testCoverageEnabled = true
        }
    }
}

task copyCoverageData {
    doFirst {
        println "copy files from /sdcard/coverage to $COVERAGE_DATA_FILES"
        String command = "adb pull /sdcard/coverage/ ./app"
        command.execute()
    }
}

//首先先删除旧的merge结果文件
task removeOldMergeEc(type: Delete, dependsOn: copyCoverageData) {
    delete "$MERGED_FILE"
}

task mergeReport(type: JacocoMerge, dependsOn: removeOldMergeEc){
    group = "reporting"
    description = "merge jacoco report."
    destinationFile= file("$MERGED_FILE")
    //这里的ec_dir是存储ec文件的文件夹
    FileTree tree = fileTree("$COVERAGE_DATA_FILES") {
        include '**/*.ec'
    }
    executionData = tree
}

task gitDiffFiles {
    new ByteArrayOutputStream().withStream { os ->
        exec {
            executable = 'git'
            args = ['log', '-1', '--pretty=format:\"%at\"']
            standardOutput = os
        }
        ext.lastVersion = os.toString()
        println ext.lastVersion
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn:mergeReport) {
    group = "reporting"
    description = "generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled = true
        html.enabled = true
    }
    classDirectories = fileTree(
            dir: './build/intermediates/classes/debug',
            excludes: ['**/R*.class',
                       '**/BuildConfig.*',
                       '**/*$InjectAdapter.class',
                       '**/*$ModuleAdapter.class',
                       '**/*$ViewInjector*.class',
                       '**/Manifest*.*'
            ])
    sourceDirectories = files("${project.projectDir}/src/main/java")
    executionData = files("$MERGED_FILE")
}
